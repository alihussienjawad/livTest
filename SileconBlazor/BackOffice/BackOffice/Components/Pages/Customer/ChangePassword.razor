@page "/ChangePassword"
@layout CustomerLayout
 
@rendermode InteractiveServer

<div class="row">
    @if (isSuccess)
    {
        <div class="alert alert-success" role="alert"> @message</div>
    }
    <div class="col-md-12 mb-3">
        <h6 class="mt-2 mb-4 password-title">Password</h6>
        <EditForm Model="UserInfo" OnValidSubmit="ChangePasswordPost" FormName="profileform">
            <ValidationSummary />

            <InputText hidden @bind-Value="UserInfo.Id" />
   

            <div class="form-floating mb-3">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <label class="form-lable">Old Password</label>
                        <InputText type="password" @bind-Value="UserInfo.OldPassword" required class="form-control" autocomplete="current-password" aria-required="true" placeholder="Please enter your old password." />
                        <ValidationMessage For="@(() => UserInfo.OldPassword)" />
                    </div>
                </div>
            </div>
            <div class="form-floating mb-3 mt-4">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <label class="form-label">New Password</label>
                        <InputText type="password" required @bind-Value="UserInfo.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please enter your new password." />
                        <ValidationMessage For="@(() => UserInfo.Password)" />
                    </div>
                </div>
            </div>
            <div class="form-floating mb-3 mt-4">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <label class="form-lable">Confirm Password</label>
                        <InputText type="password" required @bind-Value="UserInfo.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please confirm your new password." />
                        <ValidationMessage For="@(() => UserInfo.ConfirmPassword)" />
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-2 col-sm-12">
                    <a class="btn btn-sm-1 btn-1" href="/Identity/Account/Manage">Cancel</a>
                </div>
                <div class="col-md-4 col-sm-12">
                    <button type="submit" class="w-200 btn  btn-primary-1 btn-sm-1">Update password</button>

                </div>
            </div>

        </EditForm>
    </div>
</div>

@code {
    public UserDto User { get; set; } = new();
    public ChangePasswordDto UserInfo { get; set; } = new();

    private bool isSuccess { get; set; } = false;
    private string message { get; set; } = string.Empty;


    protected override async Task OnInitializedAsync()
    {

        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User;


        if (user is not null)
        {

            var res = await httpClient.GetAsync($"api/Customer/get-User/{user.Identity!.Name}");
            if (res.StatusCode == System.Net.HttpStatusCode.OK)
            {
                User = await res.Content.ReadFromJsonAsync<UserDto>() ?? new();
                UserInfo.Id = User.Id;
                UserInfo.Email = User.Email;

            }
        }


    }

    public async Task ChangePasswordPost(EditContext editContext)
    {
        

        var res = await httpClient.PutAsJsonAsync("api/Customer/ChangePassword", editContext.Model, System.Threading.CancellationToken.None);
        if (res.StatusCode == System.Net.HttpStatusCode.OK)
        {
            isSuccess = true;
            message = "Password Changed";
            NavigationManager.NavigateTo("/customer");
        }
        else
        {
            isSuccess = false;
            message = "Password Not Changed";

        }
    }
}
